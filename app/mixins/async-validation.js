// Generated by CoffeeScript 1.6.3
import Ember from 'ember';
var AsyncValidation;

AsyncValidation = Ember.Mixin.create({
  label: '',
  value: '',
  statusClass: (function() {
    var _ref;
    if (!this.get('focused') && (this.get('showFieldValidation') || this.get('formController.showFieldValidation'))) {
      return (_ref = this.get('isValid')) != null ? _ref : {
        'has-success': 'has-error'
      };
    } else {
      return '';
    }
  }).property('isValid', 'showFieldValidation', 'formController.showFieldValidation', 'focused'),
  classNameBindings: ['statusClass'],
  statusMessage: '',
  message: (function() {
    if (!this.get('focused') && (this.get('showFieldValidation') || this.get('formController.showFieldValidation'))) {
      return this.get('statusMessage');
    } else {
      return '';
    }
  }).property('isValid', 'showFieldValidation', 'formController.showFieldValidation', 'focused'),
  showFieldValidation: false,
  formController: null,
  isValid: false,
  registerFieldWithController: (function() {
    var validationFields;
    this.validateField();
    validationFields = this.get('formController.validationFields');
    if (validationFields) {
      return validationFields.pushObject(this);
    }
  }).on('didInsertElement'),
  enableShowFieldValidaion: (function() {
    if (this.get('focused') && !this.get('showFieldValidation')) {
      return this.set('showFieldValidation', true);
    }
  }).observes('focused'),
  validateField: (function() {
    var isValid, self, value;
    value = this.get('value');
    isValid = false;
    self = this;
    return this.validate(value, function(isValid, message) {
      if (value === self.get('value')) {
        self.set('statusMessage', message);
        return self.set('isValid', isValid);
      }
    });
  }).observes('value'),
  validate: function(value, status) {
    return status(true, '');
  }
});

export default AsyncValidation;
